#include <stdio.h>
#include <ctype.h>
#include <string.h>

#define MAX_ID_LEN 20

int main() {
    char ch, token[100];
    int i = 0;

    printf("Enter C code (type 'END' on a new line to finish input):\n");

    int inComment = 0;

    while (1) {
        ch = getchar();

        // Stop input if user types END
        if (ch == 'E') {
            char buffer[4];
            buffer[0] = ch;
            for (int k = 1; k < 3; k++)
                buffer[k] = getchar();
            buffer[3] = '\0';
            if (strcmp(buffer, "ND\n") == 0)
                break;
            ungetc(buffer[2], stdin);
            ungetc(buffer[1], stdin);
            ungetc(buffer[0], stdin);
        }

        // Handle comments
        if (!inComment && ch == '/') {
            char next = getchar();
            if (next == '/') {           // single-line comment
                while ((ch = getchar()) != '\n' && ch != EOF);
                continue;
            } else if (next == '*') {    // multi-line comment
                inComment = 1;
                continue;
            } else {
                ungetc(next, stdin);        // it's division operator
            }
        } else if (inComment) {
            if (ch == '*') {
                char next = getchar();
                if (next == '/') {
                    inComment = 0;      // end of comment
                } else {
                    ungetc(next, stdin);
                }
            }
            continue;
        }

        // Ignore whitespaces
        if (isspace(ch))
            continue;

        // Identifiers
        if (isalpha(ch) || ch == '_') {
            i = 0;
            token[i++] = ch;
            while ((ch = getchar()) != EOF && (isalnum(ch) || ch == '_')) {
                if (i < MAX_ID_LEN)
                    token[i++] = ch;
            }
            token[i] = '\0';
            printf("Identifier: %s\n", token);
            if (ch != EOF) ungetc(ch, stdin);
        }
        // Constants
        else if (isdigit(ch)) {
            i = 0;
            token[i++] = ch;
            while ((ch = getchar()) != EOF && isdigit(ch)) {
                if (i < MAX_ID_LEN)
                    token[i++] = ch;
            }
            token[i] = '\0';
            printf("Constant: %s\n", token);
            if (ch != EOF) ungetc(ch, stdin);
        }
        else if (ch=='+' || ch=='-' || ch=='*' || ch=='/' || ch=='=' ||
                 ch=='<' || ch=='>' || ch=='%' || ch=='!' || ch=='&' || ch=='|') {
            printf("Operator: %c\n", ch);
        }
        else if (ch=='(' || ch==')' || ch=='{' || ch=='}' || ch==',' || ch==';') {
            printf("Delimiter: %c\n", ch);
        }
    }

    return 0;
}





