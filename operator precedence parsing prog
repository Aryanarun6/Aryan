#include <stdio.h>
#include <ctype.h>
#include <string.h>

int precedence(char op) {
    switch (op) {
        case '^': return 3;
        case '*': case '/': return 2;
        case '+': case '-': return 1;
        default: return 0;
    }
}

void infixToPostfix(char* expr) {
    char stack[100]; int top = -1;
    for (int i = 0; expr[i]; i++) {
        char c = expr[i];
        if (isalnum(c)) {
            printf("%c", c);
        } else if (c == '(') {
            stack[++top] = c;
        } else if (c == ')') {
            while (top != -1 && stack[top] != '(')
                printf("%c", stack[top--]);
            top--; // remove '('
        } else {
            while (top != -1 && precedence(stack[top]) >= precedence(c))
                printf("%c", stack[top--]);
            stack[++top] = c;
        }
    }
    while (top != -1) printf("%c", stack[top--]);
}

int main() {
    char expr[100];
    printf("Enter expression: ");
    scanf("%s", expr);

    printf("Postfix (Operator Precedence Applied): ");
    infixToPostfix(expr);
    printf("\n");
    return 0;
}
